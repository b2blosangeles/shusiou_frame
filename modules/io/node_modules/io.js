(function () {
	
	var obj =  function (env, pkg, server) {
		let me = this;
		me.io = require( env.root_path + '/package/socket_io/node_modules/socket.io').listen(server);
		let sequenceNumberByClient = new Map();		
		me.io.on("connection", (socket) => {
			socket.on('createRoom', function(room){
				socket.join(room, function() {
					me.io.to(room).emit('serverData', { message: socket.id + ' has joined!' });
					me.io.in(room).clients((err, clients) => {
						me.io.to(room).emit('serverData', { message: 'Total client ' + clients.join(',') });
					});
				});
				
			});
			sequenceNumberByClient.set(socket, 1);
			socket.on("disconnect", () => {
				sequenceNumberByClient.delete(socket);
			});
			socket.on('clientData', function(data) {
				var v = {};
				try { 
					v = JSON.parse(data); 
				} catch (e) {}
				
				if ((v) && (v.room)) {
					me.io.to(v.room).emit('serverData', {data: v.data, sender: socket.id}));
				}	
			});
		});		
	};
	
	if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {
		module.exports = obj;
	} 
	
})();
